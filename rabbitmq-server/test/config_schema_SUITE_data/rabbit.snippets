[{internal_auth_backend,
  "auth_backends.1 = internal",
  [{rabbit,[{auth_backends,[rabbit_auth_backend_internal]}]}],
  []},
 {ldap_auth_backend,
  "auth_backends.1 = ldap",
  [{rabbit,[{auth_backends,[rabbit_auth_backend_ldap]}]}],
  []},
 {multiple_auth_backends,
 "auth_backends.1 = ldap
auth_backends.2 = internal",
  [{rabbit,
       [{auth_backends,
            [rabbit_auth_backend_ldap,rabbit_auth_backend_internal]}]}],
  []},
 {full_name_auth_backend,
  "auth_backends.1 = ldap
# uses module name instead of a short alias, \"http\"
auth_backends.2 = rabbit_auth_backend_http",
  [{rabbit,
       [{auth_backends,[rabbit_auth_backend_ldap,rabbit_auth_backend_http]}]}],
  []},
 {third_party_auth_backend,
  "auth_backends.1.authn = internal
# uses module name because this backend is from a 3rd party
auth_backends.1.authz = rabbit_auth_backend_ip_range",
  [{rabbit,
       [{auth_backends,
            [{rabbit_auth_backend_internal,rabbit_auth_backend_ip_range}]}]}],
  []},
 {authn_authz_backend,
 "auth_backends.1.authn = ldap
auth_backends.1.authz = internal",
  [{rabbit,
       [{auth_backends,
            [{rabbit_auth_backend_ldap,rabbit_auth_backend_internal}]}]}],
  []},
 {authn_authz_multiple_backends,
  "auth_backends.1.authn = ldap
auth_backends.1.authz = internal
auth_backends.2       = internal",
  [{rabbit,
       [{auth_backends,
            [{rabbit_auth_backend_ldap,rabbit_auth_backend_internal},
             rabbit_auth_backend_internal]}]}],
  []},
 {authn_backend_only,
  "auth_backends.1.authn = ldap",
  [{rabbit,
       [{auth_backends,
            [{rabbit_auth_backend_ldap,rabbit_auth_backend_ldap}]}]}],
  []},
 {ssl_options,
  "ssl_options.cacertfile          = test/config_schema_SUITE_data/certs/cacert.pem
ssl_options.certfile             = test/config_schema_SUITE_data/certs/cert.pem
ssl_options.keyfile              = test/config_schema_SUITE_data/certs/key.pem
ssl_options.verify               = verify_peer
ssl_options.fail_if_no_peer_cert = true",
  [{rabbit,
       [{ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {verify,verify_peer},
             {fail_if_no_peer_cert,true}]}]}],
  []},
 {tcp_listener,
  "listeners.tcp.default = 5673",
    [{rabbit,[{tcp_listeners,[5673]}]}],[]},
 {ssl_listener,
  "listeners.ssl = none",[{rabbit,[{ssl_listeners,[]}]}],[]},
 {num_acceptors,
  "num_acceptors.ssl = 1",[{rabbit,[{num_ssl_acceptors,1}]}],[]},
 {default_user_settings,
  "default_user = guest
default_pass = guest
default_user_tags.administrator = true
default_permissions.configure = .*
default_permissions.read = .*
default_permissions.write = .*",
  [{rabbit,
       [{default_user,<<"guest">>},
        {default_pass,<<"guest">>},
        {default_user_tags,[administrator]},
        {default_permissions,[<<".*">>,<<".*">>,<<".*">>]}]}],
  []},
 {cluster_formation,
  "cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
cluster_formation.classic_config.nodes.peer1 = rabbit@hostname1
cluster_formation.classic_config.nodes.peer2 = rabbit@hostname2
cluster_formation.node_type = disc",
  [{rabbit,
       [{cluster_formation,
            [{peer_discovery_backend,rabbit_peer_discovery_classic_config},
             {node_type,disc}]},
        {cluster_nodes,{[rabbit@hostname2,rabbit@hostname1],disc}}]}],
  []},
 {cluster_formation_disK,
  "cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
   cluster_formation.classic_config.nodes.peer1 = rabbit@hostname1
   cluster_formation.classic_config.nodes.peer2 = rabbit@hostname2
   cluster_formation.node_type = disk",
  [{rabbit,
       [{cluster_formation,
            [{peer_discovery_backend,rabbit_peer_discovery_classic_config},
             {node_type,disc}]},
        {cluster_nodes,{[rabbit@hostname2,rabbit@hostname1],disc}}]}],
  []},
 {cluster_formation_ram_ignored,
  "cluster_formation.node_type = ram",[],[]},
 {tcp_listen_options,
  "tcp_listen_options.backlog = 128
tcp_listen_options.nodelay = true
tcp_listen_options.exit_on_close = false",
  [{rabbit,
       [{tcp_listen_options,
            [{backlog,128},{nodelay,true},{exit_on_close,false}]}]}],
  []},
 {vm_memory_watermark_absolute,
  "vm_memory_high_watermark.absolute = 1073741824",
  [{rabbit,[{vm_memory_high_watermark,{absolute,1073741824}}]}],
  []},
 {vm_memory_watermark_absolute_units,
  "vm_memory_high_watermark.absolute = 1024MB",
  [{rabbit,[{vm_memory_high_watermark,{absolute,"1024MB"}}]}],
  []},
 {vm_memory_watermark_paging_ratio,
  "vm_memory_high_watermark_paging_ratio = 0.75
   vm_memory_high_watermark.relative = 0.4",
  [{rabbit,
       [{vm_memory_high_watermark_paging_ratio,0.75},
        {vm_memory_high_watermark,0.4}]}],
  []},
 {memory_monitor_interval, "memory_monitor_interval = 5000",
  [{rabbit,
       [{memory_monitor_interval, 5000}]}],
  []},
 {vm_memory_calculation_strategy, "vm_memory_calculation_strategy = rss",
  [{rabbit,
       [{vm_memory_calculation_strategy, rss}]}],
  []},
 {vm_memory_calculation_strategy, "vm_memory_calculation_strategy = erlang",
  [{rabbit,
       [{vm_memory_calculation_strategy, erlang}]}],
  []},
 {vm_memory_calculation_strategy, "vm_memory_calculation_strategy = allocated",
  [{rabbit,
       [{vm_memory_calculation_strategy, allocated}]}],
  []},
 {vm_memory_calculation_strategy, "vm_memory_calculation_strategy = legacy",
  [{rabbit,
       [{vm_memory_calculation_strategy, legacy}]}],
  []},
 {total_memory_available_override_value,
  "total_memory_available_override_value = 1000000000",
  [{rabbit,[{total_memory_available_override_value, 1000000000}]}],
  []},
 {total_memory_available_override_value_units,
  "total_memory_available_override_value = 1024MB",
  [{rabbit,[{total_memory_available_override_value, "1024MB"}]}],
  []},
 {connection_max,
  "connection_max = 999",
  [{rabbit,[{connection_max, 999}]}],
  []},
 {connection_max,
  "connection_max = infinity",
  [{rabbit,[{connection_max, infinity}]}],
  []},
 {channel_max,
  "channel_max = 16",
  [{rabbit,[{channel_max, 16}]}],
  []},
 {max_message_size,
  "max_message_size = 131072",
  [{rabbit, [{max_message_size, 131072}]}],
  []},
 {listeners_tcp_ip,
  "listeners.tcp.1 = 192.168.1.99:5672",
  [{rabbit,[{tcp_listeners,[{"192.168.1.99",5672}]}]}],
  []},
 {listeners_tcp_ip_multiple,
  "listeners.tcp.1 = 127.0.0.1:5672
   listeners.tcp.2 = ::1:5672",
  [{rabbit,[{tcp_listeners,[{"127.0.0.1",5672},{"::1",5672}]}]}],
  []},
 {listeners_tcp_ip_all,"listeners.tcp.1 = :::5672",
  [{rabbit,[{tcp_listeners,[{"::",5672}]}]}],
  []},
 {listeners_tcp_ipv6,
  "listeners.tcp.1 = fe80::2acf:e9ff:fe17:f97b:5672",
  [{rabbit,[{tcp_listeners,[{"fe80::2acf:e9ff:fe17:f97b",5672}]}]}],
  []},
 {tcp_options_sndbuf,
  "tcp_listen_options.backlog = 128
   tcp_listen_options.nodelay = true
   tcp_listen_options.sndbuf = 196608
   tcp_listen_options.recbuf = 196608",
  [{rabbit,
       [{tcp_listen_options,
            [{backlog,128},{nodelay,true},{sndbuf,196608},{recbuf,196608}]}]}],
  []},
 {tcp_listen_options_nodelay_with_kernel,
  "tcp_listen_options.backlog = 4096
   tcp_listen_options.nodelay = true",
  [{kernel,
       [{inet_default_connect_options,[{nodelay,true}]},
        {inet_default_listen_options,[{nodelay,true}]}]}],
  [{kernel,
       [{inet_default_connect_options,[{nodelay,true}]},
        {inet_default_listen_options,[{nodelay,true}]}]},
   {rabbit,[{tcp_listen_options,[{backlog,4096},{nodelay,true}]}]}],
  []},
 {tcp_listen_options_nodelay,
  "tcp_listen_options.backlog = 4096
   tcp_listen_options.nodelay = true",
  [{rabbit,[{tcp_listen_options,[{backlog,4096},{nodelay,true}]}]}],
  []},
 {ssl_handshake_timeout,
  "ssl_handshake_timeout = 10000",
  [{rabbit,[{ssl_handshake_timeout,10000}]}],
  []},
 {cluster_partition_handling_pause_if_all_down,
  "cluster_partition_handling = pause_if_all_down

   ## Recover strategy. Can be either 'autoheal' or 'ignore'
   cluster_partition_handling.pause_if_all_down.recover = ignore

   ## Node names to check
   cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@myhost1
   cluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@myhost2",
  [{rabbit,
       [{cluster_partition_handling,
            {pause_if_all_down,[rabbit@myhost2,rabbit@myhost1],ignore}}]}],
  []},
 {cluster_partition_handling_autoheal,
  "cluster_partition_handling = autoheal",
  [{rabbit,[{cluster_partition_handling,autoheal}]}],
  []},
 {password_hashing,
  "password_hashing_module = rabbit_password_hashing_sha512",
  [{rabbit,[{password_hashing_module,rabbit_password_hashing_sha512}]}],
  []},
 {ssl_options_verify_peer,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.verify = verify_peer
   ssl_options.fail_if_no_peer_cert = false",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {verify,verify_peer},
             {fail_if_no_peer_cert,false}]}]}],
  []},
 {ssl_options_password,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.password   = t0p$3kRe7",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {password,"t0p$3kRe7"}]}]}],
  []},
 {ssl_options_tls_ver_old,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.versions.tls1_2 = tlsv1.2
   ssl_options.versions.tls1_1 = tlsv1.1
   ssl_options.versions.tls1   = tlsv1",
  [{ssl,[{versions,['tlsv1.2','tlsv1.1',tlsv1]}]}],
  [{ssl,[{versions,['tlsv1.2','tlsv1.1',tlsv1]}]},
   {rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {versions,['tlsv1.2','tlsv1.1',tlsv1]}]}]}],
  []},
 {ssl_options_tls_ver_new,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.versions.tls1_2 = tlsv1.2
   ssl_options.versions.tls1_1 = tlsv1.1",
  [{ssl,[{versions,['tlsv1.2','tlsv1.1']}]}],
  [{ssl,[{versions,['tlsv1.2','tlsv1.1']}]},
   {rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {versions,['tlsv1.2','tlsv1.1']}]}]}],
  []},

 {ssl_options_ciphers,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.versions.1 = tlsv1.2
   ssl_options.versions.2 = tlsv1.1
   ssl_options.ciphers.1 = ECDHE-ECDSA-AES256-GCM-SHA384
   ssl_options.ciphers.2 = ECDHE-RSA-AES256-GCM-SHA384
   ssl_options.ciphers.3 = ECDHE-ECDSA-AES256-SHA384
   ssl_options.ciphers.4 = ECDHE-RSA-AES256-SHA384
   ssl_options.ciphers.5 = ECDH-ECDSA-AES256-GCM-SHA384
   ssl_options.ciphers.6 = ECDH-RSA-AES256-GCM-SHA384
   ssl_options.ciphers.7 = ECDH-ECDSA-AES256-SHA384
   ssl_options.ciphers.8 = ECDH-RSA-AES256-SHA384
   ssl_options.ciphers.9 = DHE-RSA-AES256-GCM-SHA384",
  [{ssl,[{versions,['tlsv1.2','tlsv1.1']}]}],
  [{ssl,[{versions,['tlsv1.2','tlsv1.1']}]},
   {rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {ciphers, [
               "ECDHE-ECDSA-AES256-GCM-SHA384",
               "ECDHE-RSA-AES256-GCM-SHA384",
               "ECDHE-ECDSA-AES256-SHA384",
               "ECDHE-RSA-AES256-SHA384",
               "ECDH-ECDSA-AES256-GCM-SHA384",
               "ECDH-RSA-AES256-GCM-SHA384",
               "ECDH-ECDSA-AES256-SHA384",
               "ECDH-RSA-AES256-SHA384",
               "DHE-RSA-AES256-GCM-SHA384"
             ]},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {versions,['tlsv1.2','tlsv1.1']}]}]}],
  []},

 {ssl_options_allow_poodle,
  "listeners.ssl.1 = 5671
   ssl_allow_poodle_attack = true
   ssl_options.cacertfile  = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile    = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile     = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.verify      = verify_peer
   ssl_options.fail_if_no_peer_cert = false",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_allow_poodle_attack,true},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {verify,verify_peer},
             {fail_if_no_peer_cert,false}]}]}],
  []},
 {ssl_options_depth,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.depth      = 2
   ssl_options.verify     = verify_peer
   ssl_options.fail_if_no_peer_cert = false",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {depth,2},
             {verify,verify_peer},
             {fail_if_no_peer_cert,false}]}]}],
  []},
 {ssl_options_honor_cipher_order,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.depth      = 2
   ssl_options.verify     = verify_peer
   ssl_options.fail_if_no_peer_cert = false
   ssl_options.honor_cipher_order   = true",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {depth,2},
             {verify,verify_peer},
             {fail_if_no_peer_cert, false},
             {honor_cipher_order, true}]}]}],
  []},
 {ssl_options_honor_ecc_order,
  "listeners.ssl.1 = 5671
   ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   ssl_options.certfile   = test/config_schema_SUITE_data/certs/cert.pem
   ssl_options.keyfile    = test/config_schema_SUITE_data/certs/key.pem
   ssl_options.depth      = 2
   ssl_options.verify     = verify_peer
   ssl_options.fail_if_no_peer_cert = false
   ssl_options.honor_ecc_order      = true",
  [{rabbit,
       [{ssl_listeners,[5671]},
        {ssl_options,
            [{cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
             {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
             {keyfile,"test/config_schema_SUITE_data/certs/key.pem"},
             {depth,2},
             {verify,verify_peer},
             {fail_if_no_peer_cert, false},
             {honor_ecc_order, true}]}]}],
  []},
 {ssl_cert_login_from,
  "ssl_cert_login_from = common_name",
  [{rabbit,[{ssl_cert_login_from,common_name}]}],
  []},
 {tcp_listen_options_linger_on,
  "tcp_listen_options.linger.on = true
   tcp_listen_options.linger.timeout = 100",
  [{rabbit,[{tcp_listen_options,[{linger,{true,100}}]}]}],
  []},
 {tcp_listen_options_linger_off,
  "tcp_listen_options.linger.on = false
   tcp_listen_options.linger.timeout = 100",
  [{rabbit,[{tcp_listen_options,[{linger,{false,100}}]}]}],
  []},
 {tcp_listen_options_linger_on_notimeout,
  "tcp_listen_options.linger.on = true",
  [{rabbit,[{tcp_listen_options,[{linger,{true,0}}]}]}],
  []},
 {tcp_listen_options_linger_timeout,
  "tcp_listen_options.linger.timeout = 100",
  [{rabbit,[{tcp_listen_options,[{linger,{false,100}}]}]}],
  []},

 {cluster_formation_randomized_startup_delay_both_values,
  "cluster_formation.randomized_startup_delay_range.min = 10
   cluster_formation.randomized_startup_delay_range.max = 30",
  [{rabbit, [{cluster_formation, [
                                  {randomized_startup_delay_range, {10, 30}}
                                  ]}]}],
  []},

 {cluster_formation_randomized_startup_delay_min_only,
  "cluster_formation.randomized_startup_delay_range.min = 10",
  [{rabbit, [{cluster_formation, [
                                  {randomized_startup_delay_range, {10, 60}}
                                  ]}]}],
  []},

 {cluster_formation_randomized_startup_delay_max_only,
  "cluster_formation.randomized_startup_delay_range.max = 30",
  [{rabbit, [{cluster_formation, [
                                  {randomized_startup_delay_range, {5, 30}}
                                  ]}]}],
  []},

 {cluster_formation_dns,
  "cluster_formation.peer_discovery_backend = rabbit_peer_discovery_dns
   cluster_formation.dns.hostname = 192.168.0.2.xip.io
   cluster_formation.node_type = disc",
  [{rabbit,
       [{cluster_formation,
            [{peer_discovery_dns,[{hostname,<<"192.168.0.2.xip.io">>}]},
             {peer_discovery_backend,rabbit_peer_discovery_dns},
             {node_type,disc}]}]}],
  []},
 {cluster_formation_classic,
  "cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
   cluster_formation.node_type = disc",
  [{rabbit,
       [{cluster_formation,
            [{peer_discovery_backend,rabbit_peer_discovery_classic_config},
             {node_type,disc}]}]}],
  []},
 {cluster_formation_classic_ram,
  "cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
   cluster_formation.node_type = ram",
  [{rabbit,
       [{cluster_formation,
            [{peer_discovery_backend,rabbit_peer_discovery_classic_config},
             {node_type,ram}]}]}],
  []},
 {background_gc_enabled,
  "background_gc_enabled = true
   background_gc_target_interval = 30000",
  [{rabbit,
       [{background_gc_enabled,true},{background_gc_target_interval,30000}]}],
  []},
 {background_gc_disabled,
  "background_gc_enabled = false
   background_gc_target_interval = 30000",
  [{rabbit,
       [{background_gc_enabled,false},{background_gc_target_interval,30000}]}],
  []},
 {credential_validator_length,
  "credential_validator.validation_backend = rabbit_credential_validator_min_password_length
credential_validator.min_length = 10",
  [{rabbit,
       [{credential_validator,
            [{validation_backend,
                 rabbit_credential_validator_min_password_length},
             {min_length,10}]}]}],
  []},
 {credential_validator_regexp,
  "credential_validator.validation_backend = rabbit_credential_validator_password_regexp
credential_validator.regexp = ^abc\\d+",
  [{rabbit,
       [{credential_validator,
            [{validation_backend,rabbit_credential_validator_password_regexp},
             {regexp,"^abc\\d+"}]}]}],
  []},
 {proxy_protocol_on,
  "proxy_protocol = true",
  [{rabbit,[{proxy_protocol,true}]}],[]},
 {proxy_protocol_off,
  "proxy_protocol = false",
  [{rabbit,[{proxy_protocol,false}]}],[]},
 {log_debug_file,
  "log.file.level = debug",
  [{rabbit,[{log, [{file, [{level, debug}]}]}]}],
  []},
 {log_debug_console,
  "log.console = true
   log.console.level = debug",
  [{rabbit,[{log, [{console, [{enabled, true}, {level, debug}]}]}]}],
  []},
 {log_debug_exchange,
  "log.exchange = true
   log.exchange.level = debug",
  [{rabbit,[{log, [{exchange, [{enabled, true}, {level, debug}]}]}]}],
  []},
 {log_debug_syslog,
  "log.syslog = true
   log.syslog.level = debug",
  [{rabbit,[{log, [{syslog, [{enabled, true}, {level, debug}]}]}]}],
  []},
 {log_file_name,
  "log.file = file_name",
  [{rabbit,[{log, [{file, [{file, "file_name"}]}]}]}],
  []},
 {log_file_disabled,
  "log.file = false",
  [{rabbit,[{log, [{file, [{file, false}]}]}]}],
  []},
 {log_category_level,
  "log.connection.level = debug
   log.channel.level = error",
  [{rabbit,[{log, [{categories, [{connection, [{level, debug}]},
                                 {channel, [{level, error}]}]}]}]}],
  []},
 {log_category_file,
  "log.connection.file = file_name_connection
   log.channel.file = file_name_channel",
  [{rabbit,[{log, [{categories, [{connection, [{file, "file_name_connection"}]},
                                 {channel, [{file, "file_name_channel"}]}]}]}]}],
  []},
 {delegate_count,
  "delegate_count = 64",
  [{rabbit, [
      {delegate_count, 64}
    ]}],
  []},

  {kernel_net_ticktime,
   "net_ticktime = 20",
   [{kernel, [
      {net_ticktime, 20}
     ]}],
   []},

  {log_syslog_settings,
   "log.syslog = true
    log.syslog.identity = rabbitmq
    log.syslog.facility = user
    log.syslog.multiline_mode = true
    log.syslog.ip = 10.10.10.10
    log.syslog.port = 123",
   [
    {rabbit,[{log, [{syslog, [{enabled, true}]}]}]},
    {syslog, [{app_name, "rabbitmq"},
              {facility, user},
              {multiline_mode, true},
              {dest_host, "10.10.10.10"},
              {dest_port, 123}]}
   ],
   []},
  {log_syslog_tcp,
   "log.syslog = true
    log.syslog.transport = tcp
    log.syslog.protocol = rfc5424
    log.syslog.host = syslog.my-network.com",
   [
    {rabbit,[{log, [{syslog, [{enabled, true}]}]}]},
    {syslog, [{protocol, {rfc5424, tcp}},
              {dest_host, "syslog.my-network.com"}]}
   ],
   []},
  {log_syslog_udp_default,
   "log.syslog = true
    log.syslog.protocol = rfc3164",
   [
    {rabbit,[{log, [{syslog, [{enabled, true}]}]}]},
    {syslog, [{protocol, {rfc3164, udp}}]}
   ],
   []},
  {log_syslog_tls,
  "log.syslog = true
   log.syslog.transport = tls
   log.syslog.ssl_options.cacertfile = test/config_schema_SUITE_data/certs/cacert.pem
   log.syslog.ssl_options.certfile = test/config_schema_SUITE_data/certs/cert.pem
   log.syslog.ssl_options.keyfile = test/config_schema_SUITE_data/certs/key.pem
   log.syslog.ssl_options.verify = verify_peer
   log.syslog.ssl_options.fail_if_no_peer_cert = false",
  [{rabbit, [{log, [{syslog, [{enabled, true}]}]}]},
   {syslog, [{protocol, {rfc5424, tls,
              [{verify,verify_peer},
               {fail_if_no_peer_cert,false},
               {cacertfile,"test/config_schema_SUITE_data/certs/cacert.pem"},
               {certfile,"test/config_schema_SUITE_data/certs/cert.pem"},
               {keyfile,"test/config_schema_SUITE_data/certs/key.pem"}]}}]}],
  []}
].
